{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","pages","firstPage","lastPage","className","cn","disabled","href","onClick","map","page","active","setOtherPage","items","App","length","useState","setCurrentPage","setPerPage","maxItems","firstItem","lastItem","shownItems","slice","id","value","onChange","event","target","handlePagesCount","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA+B,SAAC,GAKtC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQd,EAAW,EAAGW,GACtBI,EAA4B,IAAhBN,EACZO,EAAWP,IAAgBE,EAoBjC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CAAEC,SAAUJ,IADzC,SAGE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QA5BY,WACbN,GACHL,EAAaD,EAAc,IAqBzB,oBAWDK,EAAMQ,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASd,IADhD,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBA/BE,SAACE,GAChBA,IAASd,GACXC,EAAaa,GA6BQE,CAAaF,IAJ9B,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IAAG,YAAa,CAAEC,SAAUH,IADzC,SAGE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,WAnDVL,GACHN,EAAaD,EAAc,IA6CzB,wBCtEFiB,EAAQ1B,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,IAAMpB,EAAQmB,EAAME,OACpB,EAAsCC,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBqB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBuB,EAAhB,KAEMC,EAAWvB,EAAcD,EACzByB,EAAYD,EAAWxB,EAAU,EACjC0B,EAAWF,EAAWzB,EAAQA,EAAQyB,EAEtCG,EAAaT,EAAMU,MAAMH,EAAY,EAAGC,GAW9C,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCwB,EADjC,cACgDC,EADhD,eAC+D3B,EAD/D,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAO9B,EACP+B,SAAU,SAACC,GAAD,OAxBK,SAACA,GACxBT,GAAYS,EAAMC,OAAOH,OACzBR,EAAe,GAsBcY,CAAiBF,IALxC,UAOE,wBAAQF,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aArCmB,SAACa,GACxBO,EAAeP,MAuCb,6BACGY,EAAWb,KAAI,SAAAsB,GAAI,OAClB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCjEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3dfdca35.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange:(value: number) => void;\n};\n\nexport const Pagination: React.FC <Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pagesCount);\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === pagesCount;\n\n  const setPrevPage = () => {\n    if (!firstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const setNextPage = () => {\n    if (!lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const setOtherPage = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', { disabled: firstPage })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={firstPage}\n          onClick={setPrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={cn('page-item', { active: page === currentPage })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => setOtherPage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', { disabled: lastPage })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={lastPage}\n          onClick={() => setNextPage()}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const total = items.length;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const maxItems = currentPage * perPage;\n  const firstItem = maxItems - perPage + 1;\n  const lastItem = maxItems > total ? total : maxItems;\n\n  const shownItems = items.slice(firstItem - 1, lastItem);\n\n  const handlePagesCount = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => handlePagesCount(event)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {shownItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}